/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/xhxAHvy0Yek
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Manrope } from 'next/font/google'
import { DM_Sans } from 'next/font/google'

manrope({
  subsets: ['latin'],
  display: 'swap',
})

dm_sans({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

import { useState, useRef, useEffect } from "react"
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { JSX, SVGProps } from "react"

interface HomeProps {
  isRecording: boolean;
  handleStartRecording: () => void;
  handleStopRecording: () => void;
};

export function Home({ handleStartRecording, handleStopRecording }: HomeProps) {
  const [showOverlay, setShowOverlay] = useState(false);
  const [localIsRecording, setLocalIsRecording] = useState(false);
  const videoRef = useRef<HTMLVideoElement>(null);

  const handleRecordVideo = () => {
    if (!showOverlay) {
      setShowOverlay(true);
    }
  };

  useEffect(() => {
    let stream: MediaStream | null = null;

    if (showOverlay && videoRef.current) {
      navigator.mediaDevices.getUserMedia({ video: true })
        .then(mediaStream => {
          stream = mediaStream;
          if (videoRef.current) {
            videoRef.current.srcObject = stream;
          }
        })
        .catch(err => console.error("Error accessing camera:", err));
    }

    return () => {
      if (stream) {
        stream.getTracks().forEach(track => track.stop());
      }
    };
  }, [showOverlay]);

  const handleCloseOverlay = () => {
    setShowOverlay(false);
    if (localIsRecording) {
      handleStopRecording();
      setLocalIsRecording(false);
    }
  };

  const handleRecordingToggle = () => {
    if (localIsRecording) {
      handleStopRecording();
      setLocalIsRecording(false);
    } else {
      handleStartRecording();
      setLocalIsRecording(true);
    }
  };

  return (
    <div className="flex min-h-[100dvh] flex-col bg-background relative">
      <header className="container mx-auto flex h-20 items-center justify-between px-4 md:px-6">
        <Link href="#" className="flex items-center gap-2" prefetch={false}>
          <MountainIcon className="h-6 w-6" />
          <span className="text-lg font-semibold">Acme Inc</span>
        </Link>
        <nav className="hidden gap-4 sm:flex">
          <Link href="#" className="text-sm font-medium hover:underline" prefetch={false}>
            About
          </Link>
          <Link href="#" className="text-sm font-medium hover:underline" prefetch={false}>
            Features
          </Link>
          <Link href="#" className="text-sm font-medium hover:underline" prefetch={false}>
            Pricing
          </Link>
          <Link href="#" className="text-sm font-medium hover:underline" prefetch={false}>
            Contact
          </Link>
        </nav>
        <Button>Sign Up</Button>
      </header>
      <main className="container mx-auto flex flex-1 flex-col items-center justify-center px-4 md:px-6">
        <div className="max-w-2xl text-center">
          <h1 className="text-4xl font-bold tracking-tighter sm:text-5xl md:text-6xl">Diagnose your pain</h1>
          <p className="mt-4 text-muted-foreground md:text-xl">
            Get an instant prognosis, doctor referral, and treatment plan for your pain symptoms.
          </p>
          <div className="mt-8">
            <Button
              className="inline-flex h-10 items-center justify-center rounded-md bg-primary px-8 text-sm font-medium text-primary-foreground shadow transition-colors hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50"
              onClick={handleRecordVideo}
            >
              Start Recording
            </Button>
          </div>
        </div>
      </main>

      {/* Video recording overlay */}
      {showOverlay && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white p-6 rounded-lg shadow-lg max-w-2xl w-full">
            <h2 className="text-2xl font-bold mb-4">Record Your Video</h2>
            <div className="aspect-video bg-gray-200 mb-4 overflow-hidden rounded">
              <video 
                ref={videoRef} 
                autoPlay 
                playsInline 
                muted 
                className="w-full h-full object-cover"
              />
            </div>
            <div className="flex justify-between">
              <Button onClick={handleCloseOverlay} variant="outline">Close</Button>
              <Button onClick={handleRecordingToggle}>
                {localIsRecording ? "Stop Recording" : "Start Recording"}
              </Button>
            </div>
          </div>
        </div>
      )}

      <footer className="container mx-auto border-t py-6 px-4 md:px-6">
        <div className="flex flex-col items-center justify-between gap-4 sm:flex-row">
          <p className="text-xs text-muted-foreground">&copy; 2024 Acme Inc. All rights reserved.</p>
          <nav className="flex gap-4">
            <Link href="#" className="text-xs hover:underline" prefetch={false}>
              Terms of Service
            </Link>
            <Link href="#" className="text-xs hover:underline" prefetch={false}>
              Privacy Policy
            </Link>
          </nav>
        </div>
      </footer>
    </div>
  )
}

function MountainIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  )
}
